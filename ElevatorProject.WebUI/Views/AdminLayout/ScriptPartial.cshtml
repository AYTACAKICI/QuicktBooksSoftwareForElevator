@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<script src="~/adminweb/plugins/common/common.min.js"></script>
<script src="~/adminweb/js/custom.min.js"></script>
<script src="~/adminweb/js/settings.js"></script>
<script src="~/adminweb/js/gleek.js"></script>
<script src="~/adminweb/js/styleSwitcher.js"></script>

<script src="~/adminweb/plugins/tables/js/jquery.dataTables.min.js"></script>
<script src="~/adminweb/plugins/tables/js/datatable/dataTables.bootstrap4.min.js"></script>
<script src="~/adminweb/plugins/tables/js/datatable-init/datatable-basic.min.js"></script>


<script src="https://sdk.amazonaws.com/js/aws-sdk-2.932.0.min.js"></script>
<script>
    var region = "eu-north-1"
    var accessKeyId = "AKIAZ5LOOVJSFABSATN5";
    var secretAccessKey = "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";
    AWS.config.update({
        region: region,
        credentials: new AWS.Credentials(accessKeyId, secretAccessKey)
    });
    var s3 = new AWS.S3()
    function refreshFileList(bucketname) {
        var tableBody = document.querySelector("#filetable tbody");
        tableBody.innerHTML = "";

        s3.listObjectsV2({ Bucket: bucketname }, (err, data) => {
            if (err) {
                console.log("Error fetching file list", err)
            }
            else {
                data.Contents.forEach((object) => {
                    var fileRow = document.createElement('tr')
                    var fileNameCell = document.createElement('td')
                    fileNameCell.textContent = object.Key
                    fileRow.appendChild(fileNameCell)

                    var fileSizeCell = document.createElement("td");
                    fileSizeCell.textContent = object.Size;
                    fileRow.appendChild(fileSizeCell);

                    var downloadCell = document.createElement('td');
                    var downloadLink = document.createElement('a');
                    downloadLink.href = s3.getSignedUrl("getObject", {
                        Bucket: bucketname,
                        Key: object.Key,
                    });
                    downloadLink.textContent = "Download"
                    downloadCell.appendChild(downloadLink)
                    fileRow.appendChild(downloadCell)

                    var deleteCell = document.createElement("td")
                    var deleteButton = document.createElement("button")
                    deleteButton.textContent = "Delete"
                    deleteButton.addEventListener('click', () => {
                        deleteFile(bucketname, object.Key)
                    })
                    deleteCell.appendChild(deleteButton)
                    fileRow.appendChild(deleteCell)
                    tableBody.appendChild(fileRow)
                });

            }
        });
    }


    function uploadFiles(bucketname) {
        let files = document.getElementById('fileInput').files

        var fileCount = files.length

        for (var i = 0; i < fileCount; i++) {
            var file = files[i];
            var params = {
                Bucket: bucketname,
                Key: file.name,
                Body: file
            }

            s3.upload(params, (err, data) => {
                console.log("file uploaded")
                refreshFileList(bucketname)
            })
        }
    }

    function deleteFile(bucketname, key) {
        var params = {
            Bucket: bucketname,
            Key: key,
        }

        s3.deleteObject(params, function (err, data) {
            if (err) {
                console.log("Error deleting file:", err);
            }
            else {
                console.log("File deleted successfully");
                refreshFileList(bucketname);
            }
        }

        )
    }
    refreshFileList("basakasansor");
</script>
